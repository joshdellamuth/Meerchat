@inherits LayoutComponentBase
@using MeerchatBlazorUI.Data;
@inject ThemeConfigurationService themeConfigurationService;
@using MeerchatBlazorUI.Shared;
@using MudBlazor;

<PageTitle>Meerchat</PageTitle>

<MudThemeProvider @bind-IsDarkMode="@themeConfigurationService.isDarkMode" Theme="MyCustomTheme" />
<MudDialogProvider/>
<MudSnackbarProvider/>

<div class="page">
    @* if the show sidebar bool is true, then show the element*@
    @if (showSidebar == true)
    {
        <div class="sidebar-container">
            <NavMenu/>
        </div>
    }

    <main>
        <div class="top-row">
            @* MENU BUTTON *@
            <MudButton Variant="Variant.Text" OnClick="ShowSideBar">
                <MudIcon Icon="@Icons.Material.Filled.Menu" />
            </MudButton>
            
            @* DARKMODE SWITCH *@
            <MudStack Style="align-items:center;" Row="true">
                <MudIcon Icon="@Icons.Material.Filled.WbSunny" Color="Color.Primary"/>
                <MudSwitch class="mud-switch-track" @onclick="OnDarkModeSwitchClicked" @bind-Checked="@_isDarkMode" Color="Color.Primary" T="bool">
                <Label>
                    <MudIcon Icon="@Icons.Material.Filled.NightsStay" Color="Color.Primary"/>
                </Label>
                </MudSwitch>
            </MudStack>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    // show sidebar bool
    private bool showSidebar = true;

    public bool _isDarkMode;

    protected override async Task OnInitializedAsync()
    {
        _isDarkMode = themeConfigurationService.isDarkMode;
    }

    // makes a custom Mud Blazor Theme 
    MudTheme MyCustomTheme = new MudTheme()
    {
        // Light mode colors
        Palette = new PaletteLight()
        {
            Primary = "#001844",
            Secondary = "#95a5bf",
        },

        // Dark mode colors
        PaletteDark = new PaletteDark()
        {
            Primary = "#95a5bf",
            Secondary = "#001844"
        },

        LayoutProperties = new LayoutProperties()
        {
            DrawerWidthLeft = "260px",
            DrawerWidthRight = "300px"
        } 
    };

    // this is the method used to switch the darkmode bool
    public async Task OnDarkModeSwitchClicked()
    {
        themeConfigurationService.SwitchDarkMode();
        _isDarkMode = themeConfigurationService.isDarkMode;
    }

    // this is the bool that shows the sidebar
    public void ShowSideBar()
    {
        showSidebar = !showSidebar;
    }
}